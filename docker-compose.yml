services:
  postgres:
    image: postgres:17.4
    container_name: fleet-manager-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fleet_manager_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql@17.4/data
      - ./postgresql-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fleet-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: fleet-manager-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - fleet-network

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: fleet-manager-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - fleet-network
    volumes:
      - ./kafka:/home/appuser
    post_start:
      - command: ["sh", "-c", "/home/appuser/create-topics.sh"]

  trip-simulator:
    build:
      context: ./trip-simulator
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: fleet-manager-trip-simulator
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - fleet-network

  fleet-manager:
    build:
      context: ./fleet-manager
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: fleet-manager-service
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/fleet_manager_db
      QUARKUS_DATASOURCE_USERNAME: fleet_manager
      QUARKUS_DATASOURCE_PASSWORD: fleet_manager_password
    networks:
      - fleet-network

  penalty-points-calculator:
    build:
      context: ./penalty-points-calculator
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: penalty-points-calculator-service
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      QUARKUS_KAFKA-STREAMS_BOOTSTRAP-SERVERS: kafka:9092
      QUARKUS_HTTP_PORT: 8082
    networks:
      - fleet-network

volumes:
  postgres-data:

networks:
  fleet-network:
    driver: bridge
